import "@/styles/globals.css";
import React from "react";
import { useRouter } from "next/router";
import { AppCacheProvider } from "@mui/material-nextjs/v13-pagesRouter";
import { ThemeProvider, createTheme } from "@mui/material/styles";
import { Inter } from "next/font/google";
import NavigationLayout from "@/components/Navlayout"; 
import useBearStore from "@/store/useBearStore";
import Head from "next/head";
import { Backdrop, CircularProgress } from "@mui/material";

const inter = Inter({
  weight: ["400","700"],
  subsets: ["latin"],
  display: "swap",
});


// ================= THEME =================
// 1️⃣ Dark background for all pages
// 2️⃣ Buttons color: #6750A4
// 3️⃣ Text color: #FFFFFF
const theme = createTheme({
  palette: {
    primary: {
      main: "#6750A4",          // all buttons
      contrastText: "#FFFFFF",  // button text
    },
    secondary: {
      main: "#FFFFFF",         // Register button background
      contrastText: "#6750A4", // Register button text
    },
    background: {
      default: "#1E1E1E",       // page background
    },
    text: {
      primary: "#FFFFFF",        // all main text
      secondary: "#FFFFFF",      // secondary text
    },
  },
  typography: {
    fontFamily: inter.style.fontFamily,
    fontSize: 11,  // 👈 base font size
    body1: { fontSize: "0.75rem" },   // ~12.8px
    body2: { fontSize: "0.65rem" },   // ~11.2px
    button: { fontSize: "0.7rem" }, // ~12px
},

  components: {
  MuiButton: {
    styleOverrides: {
      // Only override primary contained buttons
      containedPrimary: {
        backgroundColor: "#6750A4",
        color: "#FFFFFF",
        '&:hover': {
          backgroundColor: '#1E1E1E',
        },
      },
      // Override secondary contained buttons
      containedSecondary: {
        backgroundColor: "#FFFFFF",
        color: "#6750A4",
        '&:hover': {
          backgroundColor: 'rgba(101, 90, 131, 0.1)', // optional hover
        },
      },
    },
  },
},

});

export default function App({ Component, pageProps, props }) {
  const router = useRouter();
  const [loading, setLoading] = React.useState(false);
  const setAppName = useBearStore((state) => state.setAppName);
  const pageName = router.pathname;

  React.useEffect(() => {
    console.log("App load", pageName, router.query);
    setLoading(true);
    // TODO: This section is used to handle page change.
    setAppName("Say Hi");
    setLoading(false);
  }, [router, pageName]);

  return (
    <React.Fragment>
      <Head>
        <title>{`Application`}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppCacheProvider {...props}>
        <ThemeProvider theme={theme}>
          <NavigationLayout>
            <Component {...pageProps} />
          </NavigationLayout>
        </ThemeProvider>
      </AppCacheProvider>
    </React.Fragment>
  );
}
